@model PagedList.IPagedList<ResourceBlender.Common.ViewModels.ResourceViewModel>
@using PagedList.Mvc;
@{
  ViewBag.Title = "Current Resources";
}
<link href="~/Content/PagedList.css" rel="stylesheet" />

<br />
@Html.ActionLink("Add a resource", "AddResource", "Resources", new { @class = "btn btn-info" })
<br /><br />
<div class="row">
    @using (Html.BeginForm("Index", "Resources", FormMethod.Get))
    {
      <p>
        Title: <input type="text" name="searchTerm">
        <input type="submit" value="Search resource" />
      </p>
    }
  </div>
<br/>

<div class="container">
  @if (Model.Count() == 0)
  {
    <div>No resources available</div>
  }
  else
  {
    <table class="table">
      <tr>
        <th>Resource</th>
        <th>Romanian Translation</th>
        <th>English Translation</th>
      </tr>
      @foreach (var resource in Model)
      {
        <tr>
          <td>@resource.ResourceString</td>
          <td>@resource.RomanianTranslation</td>
          <td>@resource.EnglishTranslation</td>
          <td>
            @Html.ActionLink("Edit", "Update", new { id = resource.Id }, new { @class = "btn btn-default" })
            @Html.ActionLink("Delete", "Delete", new { id = resource.Id }, new { @class = "btn btn-danger" })
          </td>
        </tr>
      }
    </table>
  }
  Page&nbsp;@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
  @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchTerm = Request.QueryString["searchTerm"] }))
</div>

